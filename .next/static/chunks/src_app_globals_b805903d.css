@import "https://fonts.googleapis.com/css2?family=Garamond&family=Open+Sans:wght@400;600&display=swap";
/* [project]/src/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-duration: initial;
    }
  }
}

.mx-auto {
  margin-inline: auto;
}

.line-clamp-3 {
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.inline-block {
  display: inline-block;
}

.min-h-screen {
  min-height: 100vh;
}

.w-full {
  width: 100%;
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}

.border-\[\#D6A9A9\] {
  border-color: #d6a9a9;
}

.bg-\[\#4f5d41\] {
  background-color: #4f5d41;
}

.bg-\[\#6e7f5d\] {
  background-color: #6e7f5d;
}

.bg-\[\#d9c4bb\] {
  background-color: #d9c4bb;
}

.bg-\[\#f5f5f5\] {
  background-color: #f5f5f5;
}

.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}

.from-\[\#4f5d41\] {
  --tw-gradient-from: #4f5d41;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.from-\[\#cfe8d3\] {
  --tw-gradient-from: #cfe8d3;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.to-\[\#6e7f5d\] {
  --tw-gradient-to: #6e7f5d;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.to-\[\#a8cbb7\] {
  --tw-gradient-to: #a8cbb7;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.object-cover {
  -o-object-fit: cover;
  object-fit: cover;
}

.text-center {
  text-align: center;
}

.text-\[\#0B3D20\] {
  color: #0b3d20;
}

.text-\[\#4f5d41\] {
  color: #4f5d41;
}

.text-\[\#e6d5d0\] {
  color: #e6d5d0;
}

.text-\[\#f5f5f5\] {
  color: #f5f5f5;
}

.underline {
  text-decoration-line: underline;
}

.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.duration-300 {
  --tw-duration: .3s;
  transition-duration: .3s;
}

@media (hover: hover) {
  .hover\:border:hover {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}

@media (hover: hover) {
  .hover\:border-\[\#4f5d41\]:hover {
    border-color: #4f5d41;
  }
}

@media (hover: hover) {
  .hover\:text-\[\#374830\]:hover {
    color: #374830;
  }
}

@media (hover: hover) {
  .hover\:underline:hover {
    text-decoration-line: underline;
  }
}

body {
  color: #0b3d20;
  background-color: #f4f8f6;
  font-family: Open Sans, sans-serif;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}


/*# sourceMappingURL=src_app_globals_b805903d.css.map*/
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/yanastaneva/Library/Mobile%20Documents/com~apple~CloudDocs/rtf/src/app/%5Blocale%5D/blog/page.tsx"],"sourcesContent":["// Directory: src/app/[locale]/blog/page.tsx\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport Link from 'next/link';\nimport { notFound } from 'next/navigation';\n\ninterface BlogMeta {\n  title: string;\n  date: string;\n  slug: string;\n  summary: string;\n  tags: string[];\n  image?: string;\n}\n\nconst POSTS_PER_PAGE = 6;\n\nfunction getBlogPosts(locale: string): BlogMeta[] {\n  const dir = path.join(process.cwd(), 'src/content', locale);\n  if (!fs.existsSync(dir)) return [];\n  const files = fs.readdirSync(dir);\n\n  return files.map((file) => {\n    const filePath = path.join(dir, file);\n    const content = fs.readFileSync(filePath, 'utf-8');\n    const { data } = matter(content);\n\n    return {\n      title: data.title,\n      date: data.date,\n      slug: file.replace(/\\.mdx$/, ''),\n      summary: data.summary || '',\n      tags: data.tags || [],\n      image: data.image || null,\n    };\n  }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport default function BlogIndexPage({ params, searchParams }: { params: { locale: string }, searchParams: { page?: string, tag?: string } }) {\n  const allPosts = getBlogPosts(params.locale);\n  const currentPage = parseInt(searchParams.page || '1', 10);\n  const selectedTag = searchParams.tag || null;\n\n  const filteredPosts = selectedTag\n    ? allPosts.filter((post) => post.tags.includes(selectedTag))\n    : allPosts;\n\n  const totalPages = Math.ceil(filteredPosts.length / POSTS_PER_PAGE);\n  if (currentPage < 1 || currentPage > totalPages) return notFound();\n\n  const posts = filteredPosts.slice(\n    (currentPage - 1) * POSTS_PER_PAGE,\n    currentPage * POSTS_PER_PAGE\n  );\n\n  const allTags = Array.from(new Set(allPosts.flatMap((post) => post.tags)));\n\n  return (\n    <section className=\"p-10 max-w-6xl mx-auto\">\n      <h1 className=\"text-4xl font-bold mb-8\">Blog</h1>\n\n      {/* Tag Filter */}\n      <div className=\"mb-6 flex flex-wrap gap-2\">\n        <Link href={`/${params.locale}/blog`} className={`badge badge-lg cursor-pointer ${!selectedTag ? 'badge-primary' : 'badge-outline'}`}>\n          All\n        </Link>\n        {allTags.map((tag) => (\n          <Link\n            key={tag}\n            href={`/${params.locale}/blog?tag=${tag}`}\n            className={`badge badge-lg cursor-pointer ${selectedTag === tag ? 'badge-primary' : 'badge-outline'}`}\n          >\n            {tag}\n          </Link>\n        ))}\n      </div>\n\n      {/* Blog Cards */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {posts.map((post) => (\n          <Link\n            key={post.slug}\n            href={`/${params.locale}/blog/${post.slug}`}\n            className=\"card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300 hover:border hover:border-[#4f5d41]\"\n          >\n            {post.image && (\n              <figure>\n                <img src={post.image} alt={post.title} className=\"h-48 w-full object-cover rounded-t-xl\" />\n              </figure>\n            )}\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-[#4f5d41]\">{post.title}</h2>\n              <p className=\"text-sm text-base-content/60\">{new Date(post.date).toLocaleDateString()}</p>\n              <p className=\"text-base-content/80 line-clamp-3\">{post.summary}</p>\n              <div className=\"flex gap-2 mt-2 flex-wrap\">\n                {post.tags.map((tag) => (\n                  <span key={tag} className=\"badge badge-outline text-xs\">{tag}</span>\n                ))}\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n\n      {/* Pagination controls */}\n      <div className=\"flex justify-center mt-10 gap-4\">\n        {Array.from({ length: totalPages }).map((_, i) => (\n          <Link\n            key={i}\n            href={`/${params.locale}/blog?page=${i + 1}${selectedTag ? `&tag=${selectedTag}` : ''}`}\n            className={`btn btn-sm ${currentPage === i + 1 ? 'btn-primary' : 'btn-outline'}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}